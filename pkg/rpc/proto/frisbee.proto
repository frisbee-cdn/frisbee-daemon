syntax = "proto3";

package models;

service FrisbeeProtocol {

    rpc Ping(PingRequest) returns (PingReply) {};

    rpc Store(StoreRequest) returns (Error){};

    rpc FindNode(FindNodeRequest) returns (FindNodeReply) {};

    rpc FindValue(FindValueRequest) returns (FindValueReply) {};

    rpc Probe(ProbeRequest) returns (ProbeReply) {};

    rpc FindValueProxy(FindValueProxyRequest) returns (FindValueProxyReply) {};

    rpc StoreProxy(StoreProxyRequest) returns (Error) {};

}

// Node cotains ID and address
message Node {
    bytes id = 1;
    uint32 port = 2;
    string addr = 3;
}

message Error {
    string message = 1;
}

message FindValueRequest {
    string key = 1;
    bytes id = 2;
}

message FindValueReply {
    bytes content = 1;
    repeated Node nodes = 2;
}

message FindValueProxyRequest{
    string key = 1;
}

message FindValueProxyReply{
    bytes value = 1;
}

message StoreProxyRequest {
    string key = 1;
    bytes content = 2;
}


message FindNodeRequest {
    bytes id = 1;
}

message FindNodeReply {
    repeated Node nodes = 1;
}

message ID {
    bytes id = 1;
}

message PingRequest{
    string message = 1;
    Node origin = 2;
}

message PingReply{
    string status = 1;
    Error error = 2;
    Node recipient = 3;
}

message ProbeRequest{
    string message = 1;
}

message ProbeReply{
    string status = 1;
}

message StoreRequest {
    string key = 1;
    bytes content = 2;
}

